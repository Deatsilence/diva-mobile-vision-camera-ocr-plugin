{"version":3,"sources":["index.tsx"],"names":["plugin","VisionCameraProxy","initFrameProcessorPlugin","scanOCR","frame","Error","call"],"mappings":";;;;;;;AAAA;;AACA,MAAMA,MAAM,GAAGC,2CAAkBC,wBAAlB,CAA2C,SAA3C,CAAf;;AA2CA;AACA;AACA;AAEO,SAASC,OAAT,CAAiBC,KAAjB,EAA+B;AACpC;;AACA,MAAIJ,MAAM,IAAI,IAAd,EAAoB;AAClB,UAAM,IAAIK,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,SAAOL,MAAM,CAACM,IAAP,CAAYF,KAAZ,CAAP;AACD","sourcesContent":["import { VisionCameraProxy, Frame } from 'react-native-vision-camera';\nconst plugin = VisionCameraProxy.initFrameProcessorPlugin('scanOCR');\n\ntype BoundingFrame = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  boundingCenterX: number;\n  boundingCenterY: number;\n};\ntype Point = { x: number; y: number };\n\ntype TextElement = {\n  text: string;\n  frame: BoundingFrame;\n  cornerPoints: Point[];\n};\n\ntype TextLine = {\n  text: string;\n  elements: TextElement[];\n  frame: BoundingFrame;\n  recognizedLanguages: string[];\n  cornerPoints: Point[];\n};\n\ntype TextBlock = {\n  text: string;\n  lines: TextLine[];\n  frame: BoundingFrame;\n  recognizedLanguages: string[];\n  cornerPoints: Point[];\n};\n\ntype Text = {\n  text: string;\n  blocks: TextBlock[];\n};\n\nexport type OCRFrame = {\n  result: Text;\n};\n\n/**\n * Scans OCR.\n */\n\nexport function scanOCR(frame: Frame) {\n  'worklet';\n  if (plugin == null) {\n    throw new Error('Failed to load Frame Processor Plugin!');\n  }\n  return plugin.call(frame);\n}\n"]}